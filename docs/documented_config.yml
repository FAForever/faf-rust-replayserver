# All time or duration arguments accept floating point numbers for sub-second
# precision.
server:
        # The port on which the server accepts FA connections.
        port: 15000
        # The port on which the server exposes Prometheus metrics as HTTP.
        prometheus_port: 8001
        # The number of worker threads that handle reading / merging / writing
        # replays.
        worker_threads: 8
        # Time, in seconds, after which a connection that did not yet send an
        # initial connection header is dropped.
        # This should be a pretty long time (e.g. 6 hours), as FA connects to
        # the server right as it starts and does not send any data until it
        # leaves the game lobby.
        connection_accept_timeout_s: 21600
database:
        # Database connection pool size.
        pool_size: 8
        # Database host, port, user.
        host: localhost
        port: 3306
        user: root
        # Database name.
        name: faf
storage:
        # Base path under which replays are stored.
        vault_path: /tmp/foo
replay:
        # Time, in seconds, after a game is timed out and forcefully ended. Set
        # it to longer than you expect the longest game to last, e.g. 6 hours.
        forced_timeout_s: 21600
        # Time, in seconds, which a game has to spend with no replay writing
        # connections to conclude that the game is over.
        time_with_zero_writers_to_end_replay_s: 30
        # Delay, in seconds, between the data sent by replay writers and the
        # data received by replay readers. Do not set this too low (e.g. 0), as
        # our replay merging algorithm relies on having some space to merge
        # replays.
        delay_s: 300
        # Interval, in seconds, between updates to received replays' delayed
        # data position. This also affects how often we call the merging
        # algorithm, and (in practice) how often we send new data to replay
        # readers.
        # 1 second should be good, setting this too low will probably degrade
        # performance.
        update_interval_s: 1
        # The number of replays that need to agree on the data before the
        # merging algorithm adds it to the "canonical" replay.
        # 2 works well in practice. See the Architecture section for details.
        merge_quorum_size: 2
        # Used by the merging algorithm. The maximum distance, in bytes, that a
        # replay is compared to the "canonical" replay when checking if the
        # replay matches already merged data.
        # 4k bytes work well in practice. See the Architecture section for
        # details.
        stream_comparison_distance_b: 4096
